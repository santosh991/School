<project name="School Management System" default="dist" basedir=".">
    

  <property environment="env" />
  <property file="build.properties" />
  
  <property name="compile.debug" value="true" />
  <property name="compile.deprecation" value="false" />
  <property name="compile.optimize" value="true" />
  
  <path id="compile.classpath">
    <fileset dir="${jars_folder}" includes="${compile-jars}" />
  </path>
  
  
  <target name="clean"
    description="Delete build directories">
    <echo message="clean target" />
    <delete dir="${build}" quiet="true" />
  </target>



  <target name="prepare" depends="clean"
    description="Create build folders if non-existent">
    <echo message="prepare target" />
    <mkdir dir="${build}" />
    <mkdir dir="${build}/lib" />
    <mkdir dir="${build}/etc" />
    <mkdir dir="${build}/bin" />
    <mkdir dir="${build}/resources" />
    <mkdir dir="${build}/test" />
    <mkdir dir="${build}/${web}" />
    <mkdir dir="${build}/${web}/${app.name}" /> 
    <mkdir dir="${classes}" />
    <copy todir="${build}/etc" overwrite="true">
      <fileset dir="${SCHOOL_HOME}/etc" />
    </copy>
    <copy todir="${build}/bin" overwrite="true">
      <fileset dir="${SCHOOL_HOME}/bin" />
    </copy>
  </target>


  <target name="compile" depends="clean,prepare"
    description="Compile Java sources">
    <echo message="compile target" />

    <javac srcdir="src"
      destdir="${classes}"
      debug="${compile.debug}"
      deprecation="${compile.deprecation}"
      optimize="${compile.optimize}"
      excludes="**/Test*.java"
      includeantruntime="false"
      >
      <classpath refid="compile.classpath" />
    </javac>
  </target>








  <target name="prepareWar" depends="compile"
    description="Create appropriate WAR folder ready for warring">
    <echo message="prepareWar target" />
    <copy todir="${build}/${web}/${app.name}" overwrite="true">
      <fileset dir="${SCHOOL_HOME}/web" />
    </copy>
    <copy todir="${webclasses}" overwrite="true">
      <fileset dir="${classes}" /> 
    </copy>
    <copy todir="${weblib}" flatten="true">
      <fileset dir="${jars_folder}" includes="${deploy-jars}" /> 
    </copy>
    <copy todir="${weblog}" flatten="true">
      <fileset dir="${SCHOOL_HOME}/etc/log4j" />
    </copy>
  </target>
  
  
  
   <target name="makeWar" depends="prepareWar"
    description="Generate WAR file for deploying">
    <echo message="makeWar target" />
    <war destfile="${warfile}" webxml="${web-inf}/web.xml" update="true" 
     duplicate="fail"> 
      <fileset dir="${build}/${web}/${app.name}">
        <exclude name="WEB-INF/web.xml" />
      </fileset> 
    </war> 
  </target>
  
  
  
  <target name="deployWar" depends="makeWar"
    description="Deploy WAR file to WildFly webapps folder">
    <echo message="deployWar target" />
    <delete dir="${DEPLOY_FOLDER}/${app.name}" />
    <copy file="${warfile}" todir="${DEPLOY_FOLDER}" overwrite="true" />
  </target>












  <target name="dist"
    description="Default target">
    <echo message="dist target" />
    <ant inheritrefs="false" inheritAll="true" target="deployWar" />   <!--target="compile"  -->
  </target>


  
  <target name="javadoc"
    description="Create Javadoc API Documentation">
    <echo message="javadoc target" />
    <delete dir="${docs.home}/javadoc" quiet="true" />
    <mkdir dir="${docs.home}" />
    <mkdir dir="${docs.home}/javadoc" />
        
    <javadoc sourcepath="src"      
      destdir="${docs.home}/javadoc"      
      Overview="src/Overview.html"
      version="true"
      author="true"
      use="true"
      windowtitle="School Management System API">
      
      <fileset dir="src" casesensitive="yes">
        <include name="**/*.java" />
        <exclude name="**/Test*.java" />
      </fileset>
      
      <classpath refid="compile.classpath" />

      <doctitle>  <![CDATA[<h1>SCHOOL MANAGEMENT SYSTEM/h1>]]>    </doctitle>
      <bottom>  <![CDATA[<i>Copyright &#169; 2015 PETER PROJECT.</i>]]>     </bottom>

    </javadoc>
  </target> 
  
</project>



